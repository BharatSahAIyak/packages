[
  {
    "name": "Code Runner Transformer",
    "class": "GenericTransformer",
    "type": "CODE_RUNNER",
    "description": "A code runner capable of running custom JS code.",
    "config": {
      "required": {
        "code": "string"
      },
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Document Retriever",
    "class": "IfElseTransformer",
    "type": "DOC_RETRIEVER",
    "description": "A transformer that retrieves documents for adding external context.",
    "config": {
      "required": {
        "url": "string",
        "documentIds": "string"
      },
      "optional": {
        "topK": "string",
        "staticNoContentResponse": "string"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Field Setter Transformer",
    "class": "GenericTransformer",
    "type": "FIELD_SETTER",
    "description": "A field setter that can set XMessage fields from user history or current XMessage.",
    "config": {
      "required": {
        "setters": "json"
      },
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "HTTP GET Transformer",
    "class": "GenericTransformer",
    "type": "HTTP_GET",
    "description": "A transformer capable of making HTTP GET request.",
    "config": {
      "required": {
        "url": "string"
      },
      "optional": {
        "headers": "json",
        "query": "string"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "HTTP POST Transformer",
    "class": "GenericTransformer",
    "type": "HTTP_POST",
    "description": "A transformer capable of making HTTP POST request.",
    "config": {
      "required": {
        "url": "string"
      },
      "optional": {
        "headers": "json",
        "body": "json"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Label Classifier",
    "class": "SwitchCaseTransformer",
    "type": "LABEL_CLASSIFIER",
    "description": "A transformer which classifies an input into a label using an external API.",
    "config": {
      "required": {
        "url": "string"
      },
      "optional": {
        "headers": "json",
        "suppressedLabels": "string[]",
        "existingLabel": "string",
        "suppressionThreshold": "number",
        "supersedeThreshold": "number",
        "minimumThreshold": "number",
        "persistLabel": "boolean"
      },
      "conditional": {
        "prompt": {
          "type": "string",
          "ifAbsent": [
            "XMessage.payload.text"
          ]
        }
      }
    },
    "version": "0.0.1"
  },
  {
    "name": "LLM Transformer",
    "class": "GenericTransformer",
    "type": "LLM",
    "description": "A general LLM model based transformer.",
    "config": {
      "required": {
        "APIKey": "string",
        "model": "string"
      },
      "optional": {
        "prompt": "string",
        "corpusPrompt": "string",
        "temperature": "number",
        "enableStream": "boolean",
        "outputLanguage": "string"
      },
      "conditional": {
        "outboundURL": {
          "type": "string",
          "ifPresent": [
            "enableStream"
          ]
        },
        "bhashiniUserId": {
          "type": "string",
          "ifPresent": []
        },
        "bhashiniAPIKey": {
          "type": "string",
          "ifPresent": []
        },
        "bhashiniURL": {
          "type": "string",
          "ifPresent": []
        }
      }
    },
    "version": "0.0.1"
  },
  {
    "name": "Message Type Classifier",
    "class": "SwitchCaseTransformer",
    "type": "MESSAGE_TYPE_CLASSIFIER",
    "description": "A transformer which classifies an input into a label based on the `MessageType` parameter.",
    "config": {
      "required": {},
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Neural Coreference",
    "class": "GenericTransformer",
    "type": "NEURAL_COREFERENCE",
    "description": "A transformer to add coreferenced context.",
    "config": {
      "required": {
        "prompt": "string",
        "APIKey": "string",
        "model": "string"
      },
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Query Cache Transformer",
    "class": "IfElseTransformer",
    "type": "QUERY_CACHE",
    "description": "A transformer capable of retrieving cached response for a query from an API.",
    "config": {
      "required": {
        "url": "string",
        "query": "string",
        "threshold": "number",
        "persist": "Boolean"
      },
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Random Binary",
    "class": "IfElseTransformer",
    "type": "RANDOM_BINARY",
    "description": "A transformer that randomly outputs a binary state.",
    "config": {
      "required": {},
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Simple Retry",
    "class": "RetryTransformer",
    "type": "SIMPLE_RETRY",
    "description": "A transformer which can be used to add retry mechanism.",
    "config": {
      "required": {},
      "optional": {
        "retries": "number",
        "delay": "number"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Speech To Text",
    "class": "GenericTransformer",
    "type": "SPEECH_TO_TEXT",
    "description": "Converts an audio file provided by a URL into text",
    "config": {
      "required": {
        "baseUrl": "string"
      },
      "optional": {
        "language": "string",
        "spellCheck": "string",
        "persist": "boolean"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "SQL LLM Transformer",
    "class": "GenericTransformer",
    "type": "SQLLLM",
    "description": "A code runner capable of running custom JS code.",
    "config": {
      "required": {
        "APIKey": "string",
        "model": "string",
        "xlsxIds": "string[]",
        "outboundURL": "string",
        "outputLanguage": "string",
        "excelParserURL": "string",
        "bhashiniUserId": "string",
        "bhashiniAPIKey": "string",
        "bhashiniURL": "string"
      },
      "optional": {
        "prompt": "string",
        "temperature": "number"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "Translate Transformer",
    "class": "GenericTransformer",
    "type": "TRANSLATE",
    "description": "A code runner capable of running custom JS code.",
    "config": {
      "required": {
        "provider": "string",
        "inputLanguage": "string",
        "outputLanguage": "string",
        "bhashiniUserId": "string",
        "bhashiniAPIKey": "string",
        "bhashiniURL": "string"
      },
      "optional": {},
      "conditional": {}
    },
    "version": "0.0.1"
  },
  {
    "name": "User Feedback Loop",
    "class": "StateRestoreTransformer",
    "type": "USER_FEEDBACK_LOOP",
    "description": "A transformer which restores state to a specific node after sending a message to user.",
    "config": {
      "required": {},
      "optional": {
        "prompt": "string"
      },
      "conditional": {}
    },
    "version": "0.0.1"
  }
]
