[
  {
    "label": "Broadcast Transformer",
    "type": "BROADCAST_TRANSFORMER",
    "class": "GenericTransformer",
    "description": "A node used to configure broadcast messages.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "title",
        "name": "title",
        "type": "string",
        "optional": false
      },
      {
        "label": "body",
        "name": "body",
        "type": "string",
        "optional": false
      },
      {
        "label": "image",
        "name": "image",
        "type": "string",
        "optional": true
      },
      {
        "label": "icon",
        "name": "icon",
        "type": "string",
        "optional": true
      },
      {
        "label": "deeplink",
        "name": "deeplink",
        "type": "string",
        "optional": true
      },
      {
        "label": "broadcast meta data",
        "name": "metaData",
        "type": "json",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Code Runner Transformer",
    "type": "CODE_RUNNER",
    "class": "GenericTransformer",
    "description": "A node capable of executing arbitary code in isolated environment",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "code",
        "name": "code",
        "type": "ide",
        "optional": false,
        "rows": 2
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Document Retriever",
    "type": "DOC_RETRIEVER",
    "class": "IfElseTransformer",
    "description": "A transformer capable retrieving similar document chunks.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "URL",
        "name": "url",
        "type": "string",
        "optional": false
      },
      {
        "label": "Document IDs",
        "name": "documentIds",
        "type": "string",
        "optional": true
      },
      {
        "label": "Top K",
        "name": "topK",
        "type": "number",
        "optional": true
      },
      {
        "label": "Threshold",
        "name": "threshold",
        "type": "number",
        "optional": true
      },
      {
        "label": "Static No Content Response",
        "name": "staticNoContentResponse",
        "type": "string",
        "optional": true
      },
      {
        "label": "Search All Docs",
        "name": "searchAll",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Logic",
        "name": "logic",
        "type": "string",
        "optional": true
      },
      {
        "label": "Algorithm",
        "name": "algorithm",
        "type": "string",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "If",
        "name": "if"
      },
      {
        "label": "Else",
        "name": "else"
      }
    ]
  },
  {
    "label": "Field Setter Transformer",
    "type": "FIELD_SETTER",
    "class": "GenericTransformer",
    "description": "A field setter that can set XMessage fields from user history or current XMessage.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Setters",
        "name": "setters",
        "type": "json",
        "optional": false
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Field State",
    "type": "FIELD_STATE",
    "class": "SwitchCaseTransformer",
    "description": "A transformer that outputs the value of a field as its state, provided the field is defined",
    "version": 1,
    "outputType": "dynamic",
    "inputs": [
      {
        "label": "Target Field",
        "name": "target",
        "type": "string",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Default",
        "name": "default"
      }
    ]
  },
  {
    "label": "HTTP GET Transformer",
    "type": "HTTP_GET",
    "class": "GenericTransformer",
    "description": "A transformer capable of making HTTP GET request.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Url",
        "name": "url",
        "type": "string",
        "optional": true
      },
      {
        "label": "Query",
        "name": "query",
        "type": "string",
        "optional": true
      },
      {
        "label": "Query JSON",
        "name": "queryJson",
        "type": "json",
        "optional": true
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "HTTP POST Transformer",
    "type": "HTTP_POST",
    "class": "GenericTransformer",
    "description": "A transformer capable of making HTTP POST request.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Url",
        "name": "url",
        "type": "string",
        "optional": true
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "optional": true
      },
      {
        "label": "Body",
        "name": "body",
        "type": "json",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Label Classifier",
    "type": "LABEL_CLASSIFIER",
    "class": "SwitchCaseTransformer",
    "description": "A transformer used to classify a given text to a context label.",
    "version": 1,
    "outputType": "dynamic",
    "inputs": [
      {
        "label": "Url",
        "name": "url",
        "type": "string",
        "optional": false
      },
      {
        "label": "Prompt",
        "name": "prompt",
        "type": "string",
        "optional": true
      },
      {
        "label": "Headers",
        "name": "headers",
        "type": "json",
        "optional": true
      },
      {
        "label": "Supressed Labels",
        "name": "suppressedLabels",
        "type": "string",
        "optional": true
      },
      {
        "label": "Suppression Threshold",
        "name": "suppressionThreshold",
        "type": "number",
        "optional": true
      },
      {
        "label": "Existing Label",
        "name": "existingLabel",
        "type": "string",
        "optional": true
      },
      {
        "label": "Supersede Threshold",
        "name": "supersedeThreshold",
        "type": "number",
        "optional": true
      },
      {
        "label": "Persist Label",
        "name": "persistLabel",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Minimum Threshold",
        "name": "minimumThreshold",
        "type": "number",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Default",
        "name": "default"
      }
    ]
  },
  {
    "label": "LLM Transformer",
    "type": "LLM",
    "class": "GenericTransformer",
    "description": "A node useful for LLM model integration.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "API Key",
        "name": "APIKey",
        "type": "string",
        "optional": false
      },
      {
        "label": "Model",
        "name": "model",
        "type": "options",
        "default": "gpt-4o-mini",
        "optional": false,
        "options": [
          {
            "label": "gpt-4o-mini",
            "name": "gpt-4o-mini"
          },
          {
            "label": "gpt-4o",
            "name": "gpt-4o"
          },
          {
            "label": "gpt-3.5-turbo",
            "name": "gpt-3.5-turbo"
          },
          {
            "label": "Meta LLama3.1 8B Kumbh",
            "name": "Meta-Llama-3.1-8B-Kumbh"
          },
          {
            "label": "Krutrim Spectre v2",
            "name": "Krutrim-spectre-v2"
          },
          {
            "label": "Mistral 7B Instruct v0.1",
            "name": "Mistral-7B-Instruct"
          },
          {
            "label": "Meta LLama3 8B Instruct",
            "name": "Meta-Llama-3-8B-Instruct"
          },
          {
            "label": "Google Gemma 2 27B it",
            "name": "google/gemma-2-27b-it"
          }
        ]
      },
      {
        "label": "Prompt",
        "name": "prompt",
        "type": "string",
        "optional": true
      },
      {
        "label": "Corpus Prompt",
        "name": "corpusPrompt",
        "type": "string",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "optional": true
      },
      {
        "label": "Enable Streaming",
        "name": "enableStream",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Outbound URL",
        "name": "outboundURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Output Language",
        "name": "outputLanguage",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini User ID",
        "name": "bhashiniUserId",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini API Key",
        "name": "bhashiniAPIKey",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini URL",
        "name": "bhashiniURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Provider",
        "name": "provider",
        "type": "options",
        "default": "gpt",
        "optional": false,
        "options": [
          {
            "label": "GPT",
            "name": "gpt"
          },
          {
            "label": "Groq",
            "name": "groq"
          },
          {
            "label": "Krutrim",
            "name": "krutrim"
          },
          {
            "label": "Mistralai",
            "name": "mistralai"
          },
          {
            "label": "Meta",
            "name": "meta"
          },
          {
            "label": "Google",
            "name": "google"
          }
        ]
      },
      {
        "label": "Language Provider",
        "name": "languageProvider",
        "type": "string",
        "optional": true
      },
      {
        "label": "Response Format",
        "name": "responseFormat",
        "type": "json",
        "optional": false,
        "rows": 2
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Message Type Classifier",
    "type": "MESSAGE_TYPE_CLASSIFIER",
    "class": "SwitchCaseTransformer",
    "description": "A transformer used to classify the type of payload.",
    "version": 1,
    "outputType": "dynamic",
    "inputs": [],
    "outputs": []
  },
  {
    "label": "Neural Coreference",
    "type": "NEURAL_COREFERENCE",
    "class": "GenericTransformer",
    "description": "A transformer capable of modifying payload based on coreferenced text.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Prompt",
        "name": "prompt",
        "type": "string",
        "optional": false
      },
      {
        "label": "API Key",
        "name": "APIKey",
        "type": "string",
        "optional": false
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Query Cache Transformer",
    "type": "QUERY_CACHE",
    "class": "IfElseTransformer",
    "description": "A transformer capable caching query responses.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "URL",
        "name": "url",
        "type": "string",
        "optional": false
      },
      {
        "label": "Query",
        "name": "query",
        "type": "string",
        "optional": true
      },
      {
        "label": "Threshold",
        "name": "threshold",
        "type": "number",
        "optional": true
      },
      {
        "label": "Persist",
        "name": "persist",
        "type": "boolean",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Hit",
        "name": "if"
      },
      {
        "label": "Miss",
        "name": "else"
      }
    ]
  },
  {
    "label": "Random Binary",
    "type": "RANDOM_BINARY",
    "class": "IfElseTransformer",
    "description": "A transformer that randomly generates an output state.",
    "version": 1,
    "outputType": "static",
    "inputs": [],
    "outputs": [
      {
        "label": "If",
        "name": "if"
      },
      {
        "label": "Else",
        "name": "else"
      }
    ]
  },
  {
    "label": "Schedule Transformer",
    "type": "SCHEDULE_TRANSFORMER",
    "class": "StateRestoreTransformer",
    "description": "A transformer that enables a user to setup a timer before executing a specific part of the flow.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Timer Duration",
        "name": "timerDuration",
        "type": "number",
        "description": "The duration of the timer in milliseconds.",
        "optional": false
      }
    ],
    "outputs": [
      {
        "label": "Trigger state",
        "name": "restoreState",
        "description": "The state to execute when the timer completes."
      },
      {
        "label": "Reset State",
        "name": "resetState",
        "description": "The state to restore when the timer is reset."
      }
    ]
  },
  {
    "label": "Simple Retry",
    "type": "SIMPLE_RETRY",
    "class": "RetryTransformer",
    "description": "A transformer used to retry a flow.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Retries",
        "name": "retries",
        "type": "number",
        "optional": true
      },
      {
        "label": "Delay",
        "name": "delay",
        "type": "number",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Retry",
        "name": "retry"
      },
      {
        "label": "Error",
        "name": "error"
      }
    ]
  },
  {
    "label": "SQL LLM Transformer",
    "type": "SQLLLM",
    "class": "GenericTransformer",
    "description": "A transformer capable of generating SQL queries based on prompt.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "API Key",
        "name": "APIKey",
        "type": "string",
        "optional": false
      },
      {
        "label": "Model",
        "name": "model",
        "type": "string",
        "optional": true
      },
      {
        "label": "Xlsx Ids",
        "name": "xlsxIds",
        "type": "string",
        "optional": true
      },
      {
        "label": "Prompt",
        "name": "prompt",
        "type": "string",
        "optional": true
      },
      {
        "label": "Excel Parser URL",
        "name": "excelParserURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "string",
        "optional": true
      },
      {
        "label": "Outbound URL",
        "name": "outboundURL",
        "type": "string",
        "optional": true
      },
      {
        "label": "Output Language",
        "name": "outputLanguage",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini User ID",
        "name": "bhashiniUserId",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini API Key",
        "name": "bhashiniAPIKey",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini URL",
        "name": "bhashiniURL",
        "type": "string",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "STT Transformer",
    "type": "SPEECH_TO_TEXT",
    "class": "GenericTransformer",
    "description": "A transformer capable of converting speech to text.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Base URL",
        "name": "baseUrl",
        "type": "string",
        "optional": false
      },
      {
        "label": "Language",
        "name": "language",
        "type": "string",
        "optional": true
      },
      {
        "label": "Spell Check",
        "name": "spellCheck",
        "type": "boolean",
        "optional": true
      },
      {
        "label": "Persist Result",
        "name": "persist",
        "type": "boolean",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "Translate Transformer",
    "type": "TRANSLATE",
    "class": "GenericTransformer",
    "description": "A transformer capable of translating text from one language to another.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Provider",
        "name": "provider",
        "type": "string",
        "optional": true
      },
      {
        "label": "Input Language",
        "name": "inputLanguage",
        "type": "string",
        "optional": true
      },
      {
        "label": "Output Language",
        "name": "outputLanguage",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini User ID",
        "name": "bhashiniUserId",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini API Key",
        "name": "bhashiniAPIKey",
        "type": "string",
        "optional": true
      },
      {
        "label": "Bhashini URL",
        "name": "bhashiniURL",
        "type": "string",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "On Success",
        "name": "onSuccess"
      },
      {
        "label": "On Error",
        "name": "onError"
      }
    ]
  },
  {
    "label": "User Feedback Loop",
    "type": "USER_FEEDBACK_LOOP",
    "class": "StateRestoreTransformer",
    "description": "A transformer used to send a given prompt to user and wait for feedback.",
    "version": 1,
    "outputType": "static",
    "inputs": [
      {
        "label": "Prompt",
        "name": "prompt",
        "type": "string",
        "optional": true
      }
    ],
    "outputs": [
      {
        "label": "Restore State",
        "name": "restoreState"
      }
    ]
  }
]
